{"version":3,"sources":["components/Input.js","Registration.js","Facebook.js","Google.js","Login.js","Home.js","Master.js","Logout.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","type","className","class","name","value","placeholder","onChange","Registration","submithandler","console","log","state","axios","post","email","password","then","response","alert","catch","error","setState","bind","handleChange","event","this","target","onSubmit","required","onClick","href","Component","Facebook","responseFacebook","accessToken","id","register","tokenres","localStorage","setItem","Token","appId","onFailure","autoLoad","cookie","callback","cssClass","icon","Google","responseGoogle","clientId","buttonText","onSuccess","Login","onchange","username","LoggedIn","message","token","opt","preventDefault","undefined","getItem","validate","res","to","pathname","Home","location","Master","Logout","clear","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9efa7a31.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Input(props){\r\n    return(\r\n        <input type={props.type} className={props.class} name={props.name} value={props.value} placeholder={props.placeholder} onChange={props.onChange} />\r\n    )\r\n}\r\n\r\nexport default Input;","import React,{Component,Fragment} from \"react\";\r\nimport './App.css';\r\nimport Input from \"./components/Input\";\r\nimport axios from \"axios\";\r\nclass Registration extends Component{\r\nconstructor(props){\r\n  super(props);\r\nthis.state={\r\n    name:'',\r\n    email:'',\r\n    password:''\r\n}\r\n//this.clearstate=this.clearstate.bind(this);\r\nthis.submithandler=this.submithandler.bind(this);\r\nthis.handleChange=this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(event) {\r\n          this.setState({\r\n\t\t\t  [event.target.name]:event.target.value\r\n\t\t  })\r\n}\r\n\r\n\r\n\r\nsubmithandler=()=>{\r\n  console.log(this.state);\r\naxios.post('http://localhost:51937/api/register', {\r\n  name:this.state.name,\r\n  email:this.state.email,\r\n  password:this.state.password\r\n})\r\n.then(response => { \r\n\r\n  if(response === true)\r\n    alert(\"successfully loggedIn\")  \r\n    else\r\n      alert(\"unable to register user with this credentials is already exist\")\r\n  })\r\n.catch(error => {\r\n      console.log(error)\r\n  })\r\n\r\nthis.setState({\r\n  name:'',\r\n  password:'',\r\n  email:''\r\n})\r\n}\r\nrender(){\r\nreturn (\r\n<Fragment>\r\n<div class=\"form-wrapper2\">\r\n  <form onSubmit={this.submithandler}>\r\n    <h1 className=\"fw1 text-center\">Register here</h1>\r\n\r\n    <div class=\"form-item\">\r\n                <Input type=\"text\"  name=\"name\" onChange={this.handleChange} value={this.state.name}  placeholder=\"Enter your name\"  required />\r\n    </div>\r\n    <div class=\"form-item\">\r\n                <Input type=\"text\"  name=\"password\" onChange={this.handleChange} value={this.state.password}  placeholder=\"Enter the password\"  required />\r\n    </div>\r\n    <div class=\"form-item\">\r\n                <Input type=\"text\"   name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Enter your Email\"  required />\r\n    </div>\r\n    <div class=\"button-panel\">\r\n                <input type=\"submit\" onClick={this.submithandler} class=\"button\" value=\"Register\" />\r\n    </div>\r\n  </form>\r\n  <div class=\"reminder\">\r\n    <p>Already have an Account <a href=\"/\">Login Now</a></p>\r\n  </div>\r\n  \r\n</div>\r\n\r\n\r\n</Fragment>\r\n\r\n);\r\n\r\n}\r\n\r\n}\r\nexport default Registration;\r\n","import React, { Component } from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Facebook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.responseFacebook = this.responseFacebook.bind(this);\r\n  }\r\n\r\n\r\n  responseFacebook = (response) => {\r\n    if (response) {\r\n      axios.post('http://localhost:51937/api/register', {\r\n        name: response.name,\r\n        password: response.accessToken,\r\n        email: response.id\r\n      })\r\n        .then(function (register) {\r\n          console.log('user Registered success-- ', register);\r\n          if(register===true){\r\n\r\n          axios.post('http://localhost:51937/api/token', {\r\n            email: response.id,\r\n            password: response.accessToken\r\n          })\r\n            .then(function (tokenres) {\r\n              if(tokenres!==\"null\"){\r\n              \r\n              localStorage.setItem(\"token\",tokenres.Token)\r\n            console(\"successfully token stored\")  \r\n            }\r\n            })\r\n            .catch(function (error) {\r\n              console.log('token request failed'+error);\r\n            });\r\n          }\r\n          else{\r\n            console(\"unable to register\")\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log('user request failed'+error);\r\n        });\r\n\r\n\r\n    }\r\n    else {\r\n      console.log(\"unable to fetch data\")\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (<FacebookLogin\r\n      appId=\"422443185136180\"\r\n      onFailure={this.responseFacebook}\r\n      autoLoad={false}\r\n      cookie={true}\r\n      callback={this.responseFacebook}\r\n      cssClass=\"form-wrapper1\"\r\n      icon=\"fa-facebook\"\r\n    />\r\n\r\n    );\r\n\r\n  }\r\n}\r\nexport default Facebook;\r\n\r\n","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n  \r\nclass Google extends Component{\r\n  constructor(){\r\n    super();\r\n     this.responseGoogle=this.responseGoogle.bind(this);\r\n   }\r\n\r\n  responseGoogle = (response) => {\r\n    console.log(response);\r\n  }\r\n render(){\r\n  return(\r\n  <GoogleLogin\r\n    clientId=\"158230404472-j8hel1qi1dkmh01baq5hia18vvnd9qs5.apps.googleusercontent.com\"\r\n    buttonText=\"Google Login\"\r\n    className=\"form-wrapper1\"\r\n    onSuccess={this.responseGoogle}\r\n    onFailure={this.responseGoogle}\r\n    autoLoad={false}\r\n  />\r\n\r\n);\r\n  }\r\n}\r\nexport default Google;","import React,{Component,Fragment} from \"react\";\r\nimport Facebook from './Facebook';\r\nimport Google from './Google';\r\nimport './App.css';\r\nimport axios from \"axios\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Login extends Component{\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    username:'',\r\n    password:'',\r\n    LoggedIn:false,\r\n    message:'',\r\n    token:null\r\n  } \r\nthis.submithandler=this.submithandler.bind(this);\r\nthis.onchange=this.onchange.bind(this);\r\n\r\n}\r\nonchange=(event)=>{\r\nthis.setState({\r\n\t[event.target.placeholder]:event.target.value\r\n})\r\n \r\n}\r\n\r\nsubmithandler(opt){\r\nopt.preventDefault()\r\nif(localStorage.getItem(\"token\") === undefined)\r\n{\r\naxios.post('http://localhost:51937/api/authenticate',{email:this.username,password:this.password,token:localStorage.getItem('token')}).then((validate)=>{\r\nif(validate === \"authorized\")\r\n{\r\n      this.setState({\r\n        LoggedIn:true,\r\n        username:validate.username\r\n      })\r\n}\r\nelse{\r\n  \r\n  console.log(\"Not authorize\")\r\n}\r\n})\r\n}\r\nelse{\r\n  axios.post('http://localhost:51937/api/values/token', {\r\n    email: this.username,\r\n    password: this.password,\r\n   \r\n  })\r\n    .then(function (res) {\r\n      \r\n  if(res !== null)\r\n  {   \r\n      localStorage.setItem(\"token\",res.Token)\r\n  }\r\n  else{\r\n    console(\"user is not registered\")\r\n  }\r\n    })\r\n    .catch(function (error) {\r\n     \r\n    });\r\n}\r\nthis.setState({\r\n  username:'',\r\n  password:''\r\n})\r\n}\r\n\r\n\r\n  render(){\r\n    if(this.state.LoggedIn)\r\n    {\r\nreturn (<Redirect  to={{pathname: '/home',state: { id: this.username,token:true } }} />)\r\n    }\r\n    else{\r\nreturn(\r\n\r\n<Fragment>\r\n\r\n\r\n      <div class=\"container text-center\">\r\n<Facebook /><hr />\r\n<Google />\r\n</div>\r\n\r\n\r\n  <div class=\"form-wrapper\">\r\n  <form onSubmit={this.submithandler}>\r\n      <h1 className=\"fw1 text-center\">Login here</h1>\r\n\r\n      <div class=\"form-item\">\r\n                <input type=\"text\" value={this.state.username} onChange={this.onchange}  placeholder=\"username\" required /> \r\n    </div>\r\n    \r\n    <div class=\"form-item\">\r\n                <input type=\"password\" onChange={this.onchange} value={this.state.password} placeholder=\"password\" required/> \r\n    </div>\r\n    \r\n    <div class=\"button-panel\">\r\n                <input type=\"submit\" class=\"button\" value=\"Log In\" /> \r\n    </div>\r\n\r\n</form>\r\n \r\n  <div class=\"reminder\">\r\n      <p>Not a member? <a href=\"/register\">Sign up now</a></p>\r\n      <p><a href=\"/\">Forgot password?</a></p>\r\n  </div>\r\n</div>\r\n \r\n</Fragment>\r\n  \r\n)\r\n}\r\n}\r\n}\r\nexport default Login;\r\n","import React, { Fragment } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nfunction Home(props){\r\n  if(props.location.state===null)\r\n  {\r\n    return(\r\n      <Redirect to=\"/\" />\r\n    )\r\n  }\r\n  else{\r\n    if(props.location.state != null)\r\n    {\r\n  if(props.location.state.token){\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"form-wrapper\" >Welcome {props.location.state.id}</h1>     \r\n      </Fragment>\r\n          )\r\n\r\n  }\r\n}\r\nelse{\r\n  return (<Redirect to=\"/\" />)\r\n}\r\n}\r\n    }\r\n\r\nexport default Home;\r\n\r\n","import React,{Fragment, Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nclass Master extends Component{\r\n// constructor(props){\r\n//     super(props)\r\n\r\n// }\r\nrender(){\r\n       return (\r\n          <Fragment>\r\n          <nav className=\"navbar navbar-expand-sm bg-light\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/home\">Home</Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">login</Link>\r\n        </li>\r\n    \r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">register</Link>\r\n        </li>\r\n\r\n            \r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to={{pathname: '/logout',state: { token:true } }}  >logout</Link>\r\n        </li>\r\n    \r\n     \r\n      </ul>\r\n    \r\n    </nav>\r\n    </Fragment>\r\n        );\r\n    }\r\n}\r\n    export default Master;","import React from \"react\"\r\nimport {Link,Redirect} from \"react-router-dom\"\r\n\r\nfunction Logout(props){\r\n  if(localStorage.getItem('token') === undefined)\r\n  {\r\n    \r\n      localStorage.clear()\r\n            return(\r\n                <div className=\"form-wrapper\">\r\n                <h1 >You have successfully logout </h1>\r\n                <p>want to login again\r\n                <Link to=\"/\" >LogIn Again</Link>\r\n                </p>\r\n                </div>\r\n            )\r\n       \r\n    \r\n}\r\nelse{\r\n    return(<Redirect to=\"/\" />)\r\n} \r\n    \r\n}\r\n\r\nexport default Logout","import React,{Component,Fragment} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router,Switch} from \"react-router-dom\";\r\nimport Route from \"react-router-dom/Route\";\r\nimport Registration from './Registration';\r\nimport Login from './Login';\r\nimport Home from './Home';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Master from \"./Master\";\r\nimport Logout from \"./Logout\";\r\n\r\n\r\nclass App extends Component{\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      \r\n      <Router>\r\n      <Master />   \r\n        <Switch>\r\n        <Route path=\"/home\" component={Home}/>\r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route path=\"/register\" component={Registration} />\r\n               <Route path=\"/logout\"  component={Logout} />\r\n  \r\n       </Switch>\r\n      \r\n      </Router>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import Flavour from './Flavour';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import Login from './Login';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}